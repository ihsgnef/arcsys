stuff:
    arc-standard with static oracle
    arc-eager with static and dynamic oracle [1]
    52 features [2]
    exploration [1]

exploration (26 features)
    explore and update (original) 81.776
    explore not update, don't take true transition 81.499
    explore not update, take true transition 81.495

experiments:
    15 iterations
    filter out non-projective examples from training set
    but not from dev / test set
    training is fast (<1min per iteration on large dataset), because
      we use dictionary to store features and weights 
      with feature name & feature value as keys.
      this is also memory efficient because we don't store those zero
      weights for features never seen in the training set.
      trick for averaged perceptron: for each feature and its corresponding
      weight, take the delta between two update time steps, increment the
      cumulative weight with the current weight multiplied by that delta,
      so all the weights are cumulated the same number of times.

results:
    Baseline (6 features):
        39.7, arc-standard, 6 features
    Small dataset (26 features):
        72.2, arc-eager, static oracle
        69.5, arc-eager, static oracle, exploration
        72.6, arc-eager, dynamic oracle
        73.1, arc-eager, dynamic oracle, exploration
    Large dataset (26 features):
        79.6, arc-eager, static oracle
        72.7, arc-eager, static oracle, exploration
        79.6, arc-eager, dynamic oracle
        81.2, arc-eager, dynamic oracle, exploration
    Best:
        84.0, arc-eager, dynamic oracle, exploration, 52 features

references:
    [1] Training Deterministic Parsers with Non-Deterministic Oracles
    [2] Transition-based Dependency Parsing with Rich Non-local Features 
